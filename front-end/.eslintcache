[{"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/index.js":"1","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/MyVehicles.js":"2","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/Logout.js":"3","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/AddNewVehicle.js":"4","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/Charge.js":"5","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/UserReport.js":"6","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ChooseCar.js":"7","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerPoint.js":"8","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerProvider.js":"9","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerVehicle.js":"10","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataPoint.js":"11","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerStation.js":"12","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataProvider.js":"13","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataVehicle.js":"14","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataStation.js":"15","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ChooseDate.js":"16","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/Stations.js":"17","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ChooseDateReport.js":"18"},{"size":7677,"mtime":1615721498727,"results":"19","hashOfConfig":"20"},{"size":2854,"mtime":1615721498723,"results":"21","hashOfConfig":"20"},{"size":1675,"mtime":1615721498723,"results":"22","hashOfConfig":"20"},{"size":11295,"mtime":1615721618134,"results":"23","hashOfConfig":"20"},{"size":12774,"mtime":1615721618134,"results":"24","hashOfConfig":"20"},{"size":2229,"mtime":1615721498727,"results":"25","hashOfConfig":"20"},{"size":3157,"mtime":1615721498723,"results":"26","hashOfConfig":"20"},{"size":1993,"mtime":1615721498727,"results":"27","hashOfConfig":"20"},{"size":2027,"mtime":1615721498727,"results":"28","hashOfConfig":"20"},{"size":2500,"mtime":1615721498727,"results":"29","hashOfConfig":"20"},{"size":2300,"mtime":1615721498727,"results":"30","hashOfConfig":"20"},{"size":2206,"mtime":1615721498727,"results":"31","hashOfConfig":"20"},{"size":2266,"mtime":1615721498727,"results":"32","hashOfConfig":"20"},{"size":2479,"mtime":1615721498727,"results":"33","hashOfConfig":"20"},{"size":1962,"mtime":1615721498727,"results":"34","hashOfConfig":"20"},{"size":6415,"mtime":1615721498723,"results":"35","hashOfConfig":"20"},{"size":2068,"mtime":1615721498727,"results":"36","hashOfConfig":"20"},{"size":4195,"mtime":1615721498723,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"pfprkx",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/index.js",["83","84","85","86","87"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport './Login.css';\nimport Logout from './Logout';\nimport MyVehicles from './MyVehicles';\nimport AddNewVehicle from './AddNewVehicle';\nimport Charge from './Charge';\nimport UserReport from './UserReport';\nimport ChooseCar from './ChooseCar';\nimport SessionsPerPoint from './SessionsPerPoint';\nimport SessionsPerProvider from './SessionsPerProvider';\nimport SessionsPerVehicle from './SessionsPerVehicle';\nimport SessionsPerStation from './SessionsPerStation';\nimport ShowDataPoint from './ShowDataPoint';\nimport ShowDataProvider from './ShowDataProvider';\nimport ShowDataVehicle from './ShowDataVehicle';\nimport ShowDataStation from './ShowDataStation';\nimport ChooseDate from './ChooseDate';\nimport Stations from './Stations';\nimport ChooseDateReport from './ChooseDateReport';\n\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport { Grid, Cell } from 'react-foundation';\nimport { registerLocale } from \"react-datepicker\";\nimport es from 'date-fns/locale/es';\nregisterLocale('es', es)\n\n\nconst user = localStorage.getItem('user');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  handleSubmit() {\n    localStorage.setItem(\"value\", \"admin\");\n    var x = document.forms[\"login\"][\"userid\"].value;\n    var y = document.forms[\"login\"][\"pswrd\"].value;\n    if (x == \"\" || y == \"\") {\n      alert(\"Username and password can not be empty\");\n      window.location = \"/\"\n      return false;\n    }\n    var bodyFormData = new FormData();\n    bodyFormData.append('username', $('#username').val());\n    bodyFormData.append('password', $('#password').val());\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: new URLSearchParams(bodyFormData)\n    }\n    fetch('//localhost:8765/evcharge/api/login', requestOptions)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('username', x);\n        localStorage.setItem(\"logged\", true);\n        window.location = \"/\"\n      })\n      .catch(error => {\n        alert('Wrong username or password');\n        window.location = \"/\"\n        console.error(error);\n      })\n  }\n  Logout() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({ title: 'Logout' })\n    }\n    fetch('//localhost:8765/evcharge/api/logout', requestOptions)\n      .then(() => {\n        localStorage.setItem('token', null);\n        localStorage.setItem('logged', false);\n        window.location.reload();\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n  render() {\n    if (localStorage.getItem(\"logged\") == \"true\") {\n      return (\n        <html>\n          <head>\n            <link rel=\"stylesheet\" href=\"/node_modules/foundation-sites/dist/css/foundation.min.css\" />\n          </head>\n          <body>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n            <title>Stations</title>\n            <div className=\"body\"></div>\n            <div className=\"grad\"></div>\n            <div className=\"header\">\n              <a href=\"/\">\n                <div>Electro<span>Wheeler</span></div>\n              </a>\n            </div>\n            <div className=\"topnav\">\n              <a href=\"/Stations\"><i className=\"fa fa-plug\"></i> Stations</a>\n              <div className=\"dropdown\">\n                <button className=\"dropbtn\"><i className=\"fa fa-fw fa-car\"></i> My vehicles</button>\n                <div className=\"dropdown-content\">\n                  <a href=\"/AddNewVehicle\">Add new vehicle</a>\n                  <a href=\"/ManageMyVehicles\">Manage my vehicles</a>\n                </div>\n              </div>\n\n              <div className=\"dropdown\">\n                <button className=\"dropbtn\"><i className=\"fa fa-history\" aria-hidden=\"true\"></i> Data of sessions</button>\n                <div className=\"dropdown-content\">\n                  <a href=\"/SessionsPerPoint\">Sessions per point</a>\n                  <a href=\"/SessionsPerStation\">Sessions per station</a>\n                  <a href=\"/SessionsPerVehicle\">Sessions per vehicle</a>\n                  <a href=\"/SessionsPerProvider\">Sessions per povider</a>\n                </div>\n              </div>\n              <a href=\"/ChooseDateReport\"><i className=\"fa fa-newspaper-o\"></i> {localStorage.getItem(\"username\")}'s report</a>\n              <div className=\"topnav-right\">\n                <a href=\"/Logout\"><i className=\"fa fa-fw fa-user\"></i>Logout</a>\n              </div>\n            </div>\n            <Switch>\n              <Route path=\"/ManageMyVehicles\" component={MyVehicles} />\n              <Route path=\"/AddNewVehicle\" component={AddNewVehicle} />\n              <Route path=\"/stations\" component={Stations} />\n              <Route path=\"/SessionsPerPoint\" component={SessionsPerPoint} />\n              <Route path=\"/SessionsPerStation\" component={SessionsPerStation} />\n              <Route path=\"/SessionsPerVehicle\" component={SessionsPerVehicle} />\n              <Route path=\"/SessionsPerProvider\" component={SessionsPerProvider} />\n              <Route path=\"/Logout\" component={Logout} />\n              <Route path=\"/ChooseCar\" component={ChooseCar} />\n              <Route path=\"/Charge\" component={Charge} />\n              <Route path=\"/UserReport\" component={UserReport} />\n              <Route path=\"/ChooseDateReport\" component={ChooseDateReport} />\n              <Route path=\"/ChooseDate\" component={ChooseDate} />\n              <Route path=\"/ShowDataProvider\" component={ShowDataProvider} />\n              <Route path=\"/ShowDataVehicle\" component={ShowDataVehicle} />\n              <Route path=\"/ShowDataStation\" component={ShowDataStation} />\n              <Route path=\"/ShowDataPoint\" component={ShowDataPoint} />\n              <Route path=\"/\" component={Stations} />\n            </Switch>\n            <script src=\"/node_modules/foundation-sites/dist/js/foundation.min.js\"></script>\n          </body>\n        </html>\n      )\n    } else {\n      return (\n        <html>\n          <body className=\"login-body\">\n            <meta charSet=\"UTF-8\" />\n            <title>Login</title>\n\n            <Grid className=\"body-login dispay\">\n              <Cell large={10} medium={10}>\n                <div className=\"header-login\">\n                  <a href=\"/\">\n                    <div>Electro<span>Wheeler</span></div>\n                  </a>\n                </div>\n                <form name=\"login\" action=\"/action_page.php\" classNameonsubmit=\"return validateForm()\" method=\"post\">\n                  <div className=\"login\">\n                    <input id=\"username\" type=\"text\" placeholder=\"Username\" name=\"userid\" required />\n                    <input id=\"password\" type=\"password\" placeholder=\"Password\" name=\"pswrd\" required />\n                    <input type=\"button\" onClick={this.handleSubmit.bind(this)} value=\"Login\" />\n                  </div>\n                </form>\n              </Cell>\n            </Grid>\n          </body>\n        </html>\n\n\n      )\n    }\n  }\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n",["88","89"],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/MyVehicles.js",["90"],"import React from 'react';\nimport $ from 'jquery';\nimport './MyVehicles.css';\n$.DataTable = require('datatables.net');\n\nclass MyVehicles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n  componentDidMount() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n      }\n    }\n    fetch('//localhost:8765/evcharge/api/UserCars/' + localStorage.getItem(\"username\"), requestOptions)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        var table = $(this.refs.main).DataTable({\n          // dom: '<\"data-table-wrapper\"t>',\n          data: data,\n          columns: [\n            {\n              title: 'Brand',\n              width: \"15%\",\n              data: 'brand.name'\n            },\n            {\n              title: 'Type',\n              width: \"15%\",\n              data: 'type'\n            },\n            {\n              title: 'Model',\n              width: \"15%\",\n              data: 'model'\n            },\n            {\n              title: 'Release year',\n              width: \"15%\",\n              data: 'release_year'\n            },\n            {\n              title: 'Battery size',\n              width: \"15%\",\n              data: 'usable_battery_size'\n            },\n            {\n              title: 'Action',\n              width: \"25%\",\n              data: 'id',\n              'render': function (id) {\n                return (\n                  '<a className=\"btk\" class=\"deleteBtn\" id=\"' + id + '\" ><i type=\"button\">Delete</i></a>'\n                )\n              }\n            }\n\n          ],\n          ordering: false\n        });\n\n        $(this.refs.main).on(\"click\", \".deleteBtn\", function (ev) {\n          const requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n            },\n            body: JSON.stringify({ title: 'DeleteVehicle' })\n          }\n          fetch('//localhost:8765/evcharge/api/UserCars/' + localStorage.getItem(\"username\") + '/' + ev.currentTarget.id, requestOptions)\n            .then((response) => {\n              window.location.reload();\n            })\n            .catch(error => {\n              console.error(error);\n            })\n        })\n\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n  render() {\n    return (\n      <html>\n        <body className=\"stations-body\">\n          <meta charSet=\"UTF-8\" />\n          <title>MyVehicles</title>\n          <div>\n            <h2>MyVehicles</h2>\n\n            <table ref=\"main\" />\n\n          </div>\n        </body>\n      </html>\n    )\n  }\n}\n\nexport default MyVehicles;","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/Logout.js",["91"],"import React from 'react';\nimport { Grid, Cell } from 'react-foundation';\n\nclass Logout extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  componentDidMount() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({ title: 'Logout' })\n    }\n    fetch('//localhost:8765/evcharge/api/logout', requestOptions)\n      .then(() => {\n        localStorage.setItem('token', null);\n        localStorage.setItem('logged', false);\n        window.location = \"/\";\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n  render() {\n    return (\n      <html>\n        <body className=\"login-body\">\n          <meta charSet=\"UTF-8\" />\n          <title>Login</title>\n\n          <Grid className=\"body-login dispay\">\n            <Cell large={10} medium={10}>\n              <div className=\"header-login\">\n                <a href=\"/\">\n                  <div>Electro<span>Wheeler</span></div>\n                </a>\n              </div>\n              <form name=\"login\" action=\"/action_page.php\" classNameonsubmit=\"return validateForm()\" method=\"post\">\n                <div className=\"login\">\n                  <input id=\"username\" type=\"text\" placeholder=\"Username\" name=\"userid\" required />\n                  <input id=\"password\" type=\"password\" placeholder=\"Password\" name=\"pswrd\" required />\n                  <input type=\"button\" value=\"Login\" />\n                </div>\n              </form>\n            </Cell>\n          </Grid>\n        </body>\n      </html>\n    )\n  }\n}\n\nexport default Logout;\n","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/AddNewVehicle.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"import React from 'react';\nimport $ from 'jquery';\nimport './MyVehicles.css';\n\n\nclass AddNewVehicle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { listItems: [], vehicles: [] };\n    }\n    componentDidMount() {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n            }\n        }\n        fetch('//localhost:8765/evcharge/api/cars', requestOptions)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                var initial = data;\n                var cars = [];\n                data.forEach(function (item) {\n                    return cars.push(item.brand);\n                });\n                cars = cars.reduce((unique, o) => {\n                    if (!unique.some(obj => obj.id === o.id)) {\n                        unique.push(o);\n                    }\n                    return unique;\n                }, []);\n                this.setState({ listItems: cars, vehicles: initial });\n            })\n            .catch(error => {\n                console.error(error);\n            })\n    }\n    NewVehicle(ev) {\n        ev.preventDefault();\n        if (localStorage.getItem(\"Carid\") == \" \") {\n            alert(\"you have not chosen a car\");\n            window.location.reload();\n        }\n        else {\n            const requestOptions1 = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n                }\n            }\n            fetch('//localhost:8765/evcharge/api/UserCars/' + localStorage.getItem(\"username\"), requestOptions1)\n                .then((response) => {\n                    return response.json();\n                })\n                .then((data) => {\n                    data.forEach(function (item) {\n                        if (item.id == localStorage.getItem(\"Carid\")) {\n                            alert(\"You already have this car\");\n                            window.location = \"//localhost:3000/AddNewVehicle\";\n                        }\n                    })\n\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n                },\n                body: JSON.stringify({ title: 'NewVehicle' })\n            }\n            fetch('//localhost:8765/evcharge/api/UserCars/' + localStorage.getItem(\"username\") + '/' + localStorage.getItem(\"Carid\"), requestOptions)\n                .then((response) => {\n                    localStorage.setItem(\"Carid\", \" \");\n                    window.location = \"//localhost:3000/ManageMyVehicles\";\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        }\n    }\n    render() {\n        return (\n            <html>\n                <body>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n                    <div className=\"body1\">\n                        <h2><i className=\"fa fa-car\"></i>Add New Vehicle</h2>\n                        <div className=\"container\">\n                            <form action=\"/action_page.php\">\n                                <div className=\"row\">\n                                    <div className=\"col-50\">\n                                        <h3>New Vehicle</h3>\n                                        <label for=\"brand\"> Brand</label>\n                                        <select id=\"brand\" onChange={this.getBrandData.bind(this)}>\n                                            <option value=\"no\" selected=\"selected\">Choose an option</option>\n                                            {this.state.listItems.map(listItem => (\n                                                <option value={listItem.id}>{listItem.name}</option>\n                                            ))}\n                                        </select>\n                                        <label for=\"type\"> Type</label>\n                                        <select disabled id=\"type\" onChange={this.chooseType.bind(this)}>\n                                        </select>\n                                        <label for=\"model\"> Model</label>\n                                        <select disabled id=\"model\" name=\"model\" onChange={this.chooseModel.bind(this)}>\n                                        </select>\n                                        <label for=\"release_year\"> Release year</label>\n                                        <select disabled id=\"release_year\" name=\"release_year\" onChange={this.chooseReleaseYear.bind(this)}>\n                                        </select>\n                                        <label for=\"battery_size\">Battery size</label>\n                                        <select disabled id=\"battery_size\" name=\"battery_size\" onChange={this.chooseAddNewVehicle.bind(this)}>\n                                        </select>\n                                    </div>\n                                </div>\n                                <button id=\"AddNewVehicle\" className=\"btn\" onClick={this.NewVehicle.bind(this)}>Add new vehicle</button>\n                            </form>\n                        </div>\n                    </div>\n                </body>\n            </html>\n        )\n        // })\n    }\n    getBrandData(ev) {\n        var types = [];\n        this.state.vehicles.forEach(function (item) {\n            if (item.brand.id == ev.currentTarget.value) {\n                types.push(item.type);\n                localStorage.setItem('carbrand', item.brand.id);\n                localStorage.setItem('Carid', \" \");\n            }\n        })\n\n        var list = types.filter(function (el, index, arr) {\n            return index === types.indexOf(el);\n        });\n\n        $(\"#type\").html(\"\").removeClass(\"disabled\").attr(\"disabled\", false);\n        $(\"#type\").append('<option value=\"no\" selected=\"selected\">Choose an option</option>');\n        list.forEach(function (item) {\n            $(\"#type\").append(\n                \"<option value=\" + item + \">\" + item + \"</option>\"\n            )\n        })\n    }\n    chooseType(ev) {\n        var types = [];\n        this.state.vehicles.forEach(function (item) {\n            if (item.type === ev.currentTarget.value && localStorage.getItem(\"carbrand\") == item.brand.id) {\n                types.push(item.model);\n                localStorage.setItem('cartype', item.type);\n                localStorage.setItem('Carid', \" \");\n            }\n        })\n\n        var models = types.filter(function (el, index, arr) {\n            return index === types.indexOf(el);\n        });\n\n        $(\"#model\").html(\"\").removeClass(\"disabled\").attr(\"disabled\", false);\n        $(\"#model\").append('<option value=\"no\" selected=\"selected\">Choose an option</option>');\n        models.forEach(function (item) {\n            $(\"#model\").append(\n                \"<option value=\" + encodeURIComponent(item) + \">\" + item + \"</option>\"\n            )\n        })\n    }\n    chooseModel(ev) {\n        var types = [];\n        this.state.vehicles.forEach(function (item) {\n            if (item.model === decodeURIComponent(ev.currentTarget.value) && localStorage.getItem(\"carbrand\") == item.brand.id && localStorage.getItem(\"cartype\") == item.type) {\n                types.push(item.release_year);\n                localStorage.setItem('carmodel', item.model);\n                localStorage.setItem('Carid', \" \");\n            }\n        })\n\n        var releaseyear = types.filter(function (el, index, arr) {\n            return index === types.indexOf(el);\n        });\n\n        $(\"#release_year\").html(\"\").removeClass(\"disabled\").attr(\"disabled\", false);\n        $(\"#release_year\").append('<option value=\"no\" selected=\"selected\">Choose an option</option>');\n        releaseyear.forEach(function (item) {\n            $(\"#release_year\").append(\n                \"<option value=\" + item + \">\" + item + \"</option>\"\n            )\n        })\n    }\n    chooseReleaseYear(ev) {\n        var types = [];\n        this.state.vehicles.forEach(function (item) {\n            if (item.release_year == null) {\n                var bar = \"null\";\n                if (bar === ev.currentTarget.value && localStorage.getItem(\"carbrand\") == item.brand.id && localStorage.getItem(\"cartype\") == item.type && localStorage.getItem(\"carmodel\") == item.model) {\n                    types.push(item.usable_battery_size);\n                    localStorage.setItem('carrelease_year', null);\n                    localStorage.setItem('Carid', \" \");\n                }\n            }\n            else {\n                var foo = item.release_year;\n                var bar = '' + foo;\n                if (bar === ev.currentTarget.value && localStorage.getItem(\"carbrand\") == item.brand.id && localStorage.getItem(\"cartype\") == item.type && localStorage.getItem(\"carmodel\") == item.model) {\n                    types.push(item.usable_battery_size);\n                    localStorage.setItem('carrelease_year', bar);\n                    localStorage.setItem('Carid', \" \");\n                }\n            }\n        })\n\n        var batterysize = types.filter(function (el, index, arr) {\n            return index === types.indexOf(el);\n        });\n\n        $(\"#battery_size\").html(\"\").removeClass(\"disabled\").attr(\"disabled\", false);\n        $(\"#battery_size\").append('<option value=\"no\" selected=\"selected\">Choose an option</option>');\n        batterysize.forEach(function (item) {\n            $(\"#battery_size\").append(\n                \"<option value=\" + item + \">\" + item + \"</option>\"\n            )\n        })\n    }\n    chooseAddNewVehicle(ev) {\n        this.state.vehicles.forEach(function (item) {\n            var foo = item.usable_battery_size;\n            var bar = '' + foo;\n            if (localStorage.getItem(\"carrelease_year\") == \"null\") {\n                if (bar === ev.currentTarget.value && localStorage.getItem(\"carbrand\") == item.brand.id && localStorage.getItem(\"cartype\") == item.type && localStorage.getItem(\"carmodel\") == item.model && item.release_year == null) {\n                    localStorage.setItem('carusable_battery_size', bar);\n                    localStorage.setItem('Carid', item.id);\n                }\n            }\n            else {\n                if (bar === ev.currentTarget.value && localStorage.getItem(\"carbrand\") == item.brand.id && localStorage.getItem(\"cartype\") == item.type && localStorage.getItem(\"carmodel\") == item.model && localStorage.getItem(\"carrelease_year\") == item.release_year) {\n                    localStorage.setItem('carusable_battery_size', bar);\n                    localStorage.setItem('Carid', item.id);\n                }\n            }\n        })\n    }\n\n\n}\n\nexport default AddNewVehicle;","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/Charge.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React from 'react';\nimport $ from 'jquery';\nimport './Charge.css';\nimport moment from 'moment';\n\n\nclass Charge extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { ChargingPoints: [], Providers: [], kw: '' };\n        this.updateInput = this.updateInput.bind(this);\n    }\n    updateInput(event) {\n        this.setState({ kw: event.target.value });\n        localStorage.setItem(\"energydelivered\", event.target.value);\n        var cost;\n        var kw1;\n        $(\"#Provider\").html(\"\").removeClass(\"disabled\").attr(\"disabled\", false);\n        $(\"#Provider\").append('<option value=\"no\" selected=\"selected\">Choose an option</option>');\n        this.state.Providers.forEach(function (item) {\n            if (item.lowtoMidLimit == 0) {\n                cost = item.lowPrice * localStorage.getItem(\"energydelivered\");\n                cost = cost.toFixed(2);\n                $(\"#Provider\").append(\n                    \"<option value=\" + item.id + \">\" + item.brandName + \" \" + cost + \"</option>\"\n                )\n            }\n            else {\n                if (item.lowtoMidLimit >= localStorage.getItem(\"energydelivered\")) {\n                    cost = item.lowPrice * localStorage.getItem(\"energydelivered\");\n                    cost = cost.toFixed(2);\n                    $(\"#Provider\").append(\n                        \"<option value=\" + item.id + \">\" + item.brandName + \" \" + cost + \"</option>\"\n                    )\n                }\n                if (item.lowtoMidLimit < localStorage.getItem(\"energydelivered\")) {\n                    if (item.midtoHighLimit >= localStorage.getItem(\"energydelivered\")) {\n                        cost = item.lowPrice * item.lowtoMidLimit;\n                        kw1 = localStorage.getItem(\"energydelivered\") - item.lowtoMidLimit;\n                        cost = cost + (kw1 * item.midPrice);\n                        cost = cost.toFixed(2);\n                        $(\"#Provider\").append(\n                            \"<option value=\" + item.id + \">\" + item.brandName + \" \" + cost + \"</option>\"\n                        )\n                    }\n                    if (item.midtoHighLimit < localStorage.getItem(\"energydelivered\")) {\n                        cost = item.lowPrice * item.lowtoMidLimit;\n                        cost = cost + ((item.midtoHighLimit - item.lowtoMidLimit) * item.midPrice);\n                        kw1 = localStorage.getItem(\"energydelivered\") - item.midtoHighLimit;\n                        cost = cost + kw1 * item.highPrice;\n                        cost = cost.toFixed(2);\n                        $(\"#Provider\").append(\n                            \"<option value=\" + item.id + \">\" + item.brandName + \" \" + cost + \"</option>\"\n                        )\n                    }\n                }\n            }\n        })\n    }\n    componentDidMount() {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n            }\n        }\n        fetch('//localhost:8765/evcharge/api/chargingPoints/', requestOptions)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                var types = [];\n                data.forEach(function (item) {\n                    if (item.operator.ID == localStorage.getItem(\"OperatorId\")) {\n                        types.push(item.id);\n                    }\n                })\n                this.setState({ ChargingPoints: types });\n            })\n            .catch(error => {\n                console.error(error);\n            })\n        const requestOptions1 = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n            }\n        }\n        fetch('//localhost:8765/evcharge/api/energyproviders/', requestOptions)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                this.setState({ Providers: data });\n            })\n            .catch(error => {\n                console.error(error);\n            })\n\n\n    }\n    makeSession(ev) {\n        ev.preventDefault();\n        var value = parseFloat(localStorage.getItem(\"energydelivered\"));\n        if (value <= localStorage.getItem(\"UsableBatterySizeforcharge\") && value > 0) {\n            var date = new Date();\n            const format1 = \"yyyy-MM-DDThh:mm:ss\"\n            var dateTime1 = moment(date).format(format1);\n            localStorage.setItem(\"startedon\", dateTime1);\n            var milliseconds = new Date().getTime() + (1 * 60 * 60 * 1000);\n            var later = new Date(milliseconds);\n            var dateTime2 = moment(later).format(format1);\n            localStorage.setItem(\"finishedon\", dateTime2);\n            var car = localStorage.getItem(\"carid\");\n            var chargingPoint = parseInt(localStorage.getItem(\"chargingpointid\"));\n            var energyProvider = parseInt(localStorage.getItem(\"energyproviderid\"));\n            var username = localStorage.getItem(\"username\");\n            var startedOn = localStorage.getItem(\"startedon\");\n            var finishedOn = localStorage.getItem(\"finishedon\");\n            var protocol = localStorage.getItem(\"protocol\");\n            var payment = localStorage.getItem(\"payment\");\n            var cost = parseFloat(localStorage.getItem(\"cost\"));\n            var energyDelivered = parseFloat(localStorage.getItem(\"energydelivered\"));\n            let formData = {\n                VehicleID: car,\n                ChargingPointID: chargingPoint,\n                EnergyProviderID: energyProvider,\n                Username: username,\n                StartedOn: startedOn,\n                FinishedOn: finishedOn,\n                Protocol: protocol,\n                Payment: payment,\n                Cost: cost,\n                EnergyDelivered: energyDelivered\n            };\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n                },\n                body: JSON.stringify(formData)\n            }\n            fetch('//localhost:8765/evcharge/api/sessions', requestOptions)\n                .then(() => {\n                    window.location = \"/\";\n                })\n                .catch(error => {\n                    alert(\"You need to fill in all the fields\");\n                    window.location.reload();\n                    console.error(error);\n                })\n        }\n        if (value > localStorage.getItem(\"UsableBatterySizeforcharge\")) {\n            ev.preventDefault();\n            alert(\"Usable battery size of your car is less than the kw you filled in\");\n            window.location.reload();\n        }\n        if (value <= 0) {\n            ev.preventDefault();\n            alert(\"Kw can not be <=0\");\n            window.location.reload();\n        }\n    }\n    Protocol(ev) {\n        localStorage.setItem(\"protocol\", ev.currentTarget.value);\n        $(\"#payment\").html(\"\").removeClass(\"disabled\").attr(\"disabled\", false);\n        $(\"#payment\").append('<option value=\"no\" selected=\"selected\">Choose an option</option>');\n        $(\"#payment\").append(\n            \"<option value=\" + \"card\" + \">\" + \"card\" + \"</option>\"\n        )\n        $(\"#payment\").append(\n            \"<option value=\" + \"cash\" + \">\" + \"cash\" + \"</option>\"\n        )\n    }\n    Payment(ev) {\n        localStorage.setItem(\"payment\", ev.currentTarget.value);\n    }\n    ChargingPointSaveId(ev) {\n        localStorage.setItem(\"chargingpointid\", ev.currentTarget.value);\n    }\n    EnergyProviderId(ev) {\n        localStorage.setItem(\"energyproviderid\", ev.currentTarget.value);\n        var cost;\n        var kw1;\n        this.state.Providers.forEach(function (item) {\n            if (item.id == localStorage.getItem(\"energyproviderid\")) {\n                if (item.lowtoMidLimit == 0) {\n                    cost = item.lowPrice * localStorage.getItem(\"energydelivered\");\n                    cost = cost.toFixed(2);\n                    localStorage.setItem(\"cost\", cost);\n                }\n                else {\n                    if (item.lowtoMidLimit >= localStorage.getItem(\"energydelivered\")) {\n                        cost = item.lowPrice * localStorage.getItem(\"energydelivered\");\n                        cost = cost.toFixed(2);\n                        localStorage.setItem(\"cost\", cost);\n                    }\n                    if (item.lowtoMidLimit < localStorage.getItem(\"energydelivered\")) {\n                        if (item.midtoHighLimit >= localStorage.getItem(\"energydelivered\")) {\n                            cost = item.lowPrice * item.lowtoMidLimit;\n                            kw1 = localStorage.getItem(\"energydelivered\") - item.lowtoMidLimit;\n                            cost = cost + (kw1 * item.midPrice);\n                            cost = cost.toFixed(2);\n                            localStorage.setItem(\"cost\", cost);\n                        }\n                        if (item.midtoHighLimit < localStorage.getItem(\"energydelivered\")) {\n                            cost = item.lowPrice * item.lowtoMidLimit;\n                            cost = cost + ((item.midtoHighLimit - item.lowtoMidLimit) * item.midPrice);\n                            kw1 = localStorage.getItem(\"energydelivered\") - item.midtoHighLimit;\n                            cost = cost + kw1 * item.highPrice;\n                            cost = cost.toFixed(2);\n                            localStorage.setItem(\"cost\", cost);\n                        }\n                    }\n                }\n            }\n        })\n\n        $(\"#protocol\").html(\"\").removeClass(\"disabled\").attr(\"disabled\", false);\n        $(\"#protocol\").append('<option value=\"no\" selected=\"selected\">Choose an option</option>');\n        $(\"#protocol\").append(\n            \"<option value=\" + \"accharger\" + \">\" + \"ac charger\" + \"</option>\"\n        )\n        $(\"#protocol\").append(\n            \"<option value=\" + \"dccharger\" + \">\" + \"dc charger\" + \"</option>\"\n        )\n    }\n    render() {\n        return (\n            <div className=\"body1\">\n                <h2><i class=\"fa fa-exchange\" aria-hidden=\"true\"></i>Make a new charging</h2>\n                <div className=\"row\">\n                    <div className=\"col-75\">\n                        <div className=\"container\">\n                            <form action=\"/action_page.php\">\n                                <div className=\"row\">\n                                    <div className=\"col-50\">\n                                        <h3>Details of charging</h3>\n                                        <label for=\"Point\"> Charging point</label>\n                                        <select id=\"Point\" onChange={this.ChargingPointSaveId.bind(this)}>\n                                            <option value=\"no\" selected=\"selected\">Choose an option</option>\n                                            {this.state.ChargingPoints.map(ChargingPoints => (\n                                                <option value={ChargingPoints}>{ChargingPoints}</option>\n                                            ))}\n                                        </select>\n                                        <label for=\"energy\"><i className=\"fa fa-bolt\"></i> KW</label>\n                                        <input type=\"text\" id=\"energy\" onChange={this.updateInput.bind(this)} name=\"energy\" placeholder=\"30,02\" />\n                                        <label for=\"Provider\"> Energy provider</label>\n                                        <select disabled id=\"Provider\" onChange={this.EnergyProviderId.bind(this)}>\n                                        </select>\n                                        <label for=\"protocol\"> Protocol</label>\n                                        <select disabled id=\"protocol\" onChange={this.Protocol.bind(this)}>\n                                        </select>\n                                        <label for=\"payment\"> Payment</label>\n                                        <select disabled id=\"payment\" onChange={this.Payment.bind(this)}>\n                                        </select>\n                                    </div>\n                                </div>\n                                <button id=\"Makecharge\" className=\"btn\" onClick={this.makeSession.bind(this)}>Make the charging</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Charge;","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/UserReport.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ChooseCar.js",["134","135"],"import React from 'react';\nimport $ from 'jquery';\nimport './MyVehicles.css';\n$.DataTable = require('datatables.net');\n\nclass ChooseCar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [], vehicle: []\n    };\n  }\n  componentDidMount() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n      }\n    }\n    fetch('//localhost:8765/evcharge/api/UserCars/' + localStorage.getItem(\"username\"), requestOptions)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        var initial = data;\n        this.setState({ vehicle: initial })\n        var table = $(this.refs.main).DataTable({\n          // dom: '<\"data-table-wrapper\"t>',\n          data: data,\n          columns: [\n            {\n              title: 'Brand',\n              width: \"15%\",\n              data: 'brand.name'\n            },\n            {\n              title: 'Type',\n              width: \"15%\",\n              data: 'type'\n            },\n            {\n              title: 'Model',\n              width: \"15%\",\n              data: 'model'\n            },\n            {\n              title: 'Release year',\n              width: \"15%\",\n              data: 'release_year'\n            },\n            {\n              title: 'Battery size',\n              width: \"15%\",\n              data: 'usable_battery_size'\n            },\n            {\n              title: 'Action',\n              width: \"25%\",\n              data: 'id',\n              'render': function (id) {\n                return (\n                  '<a className=\"btk\" class=\"ChooseCarBtn\" id=\"' + id + '\" ><i type=\"button\">Choose</i></a>'\n                )\n              }\n            }\n\n          ],\n          ordering: false\n        });\n\n        $(this.refs.main).on(\"click\", \".ChooseCarBtn\", function (ev) {\n          data.forEach(function (item) {\n            if (item.id == ev.currentTarget.id) {\n              var value = parseFloat(item.usable_battery_size);\n              localStorage.setItem(\"UsableBatterySizeforcharge\", value);\n            }\n          })\n          localStorage.setItem(\"carid\", ev.currentTarget.id);\n          localStorage.setItem(\"chargingpointid\", \" \");\n          localStorage.setItem(\"energyproviderid\", \" \");\n          localStorage.setItem(\"startedon\", \" \");\n          localStorage.setItem(\"finishedon\", \" \");\n          localStorage.setItem(\"protocol\", \" \");\n          localStorage.setItem(\"payment\", \" \");\n          localStorage.setItem(\"cost\", \" \");\n          localStorage.setItem(\"energydelivered\", \" \");\n          window.location = \"//localhost:3000/Charge\";\n        })\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n  render() {\n    return (\n      <html>\n        <body className=\"stations-body\">\n          <meta charSet=\"UTF-8\" />\n          <title>Choose vehicle for session</title>\n          <div>\n            <h2>Choose vehicle for session</h2>\n\n            <table ref=\"main\" />\n\n          </div>\n        </body>\n      </html>\n    )\n  }\n}\n\nexport default ChooseCar;","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerPoint.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerProvider.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerVehicle.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataPoint.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/SessionsPerStation.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataProvider.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataVehicle.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ShowDataStation.js",[],"/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ChooseDate.js",["136","137","138","139"],"import React from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nimport './MyVehicles.css';\n\n\nclass ChooseDate extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: new Date(), startDate1: new Date()\n    };\n    this.handleStartChange = this.handleStartChange.bind(this);\n    this.handleStartChange1 = this.handleStartChange1.bind(this);\n  }\n\n  handleStartChange = (date) => {\n    this.setState({\n      startDate: date\n    })\n  }\n  handleStartChange1 = (date) => {\n    this.setState({\n      startDate1: date\n    })\n  }\n  chooseDate(ev) {\n    ev.preventDefault();\n    const format = \"yyyy-MM-DD\"\n    var dateTime = moment(this.state.startDate).format(format);\n    localStorage.setItem(\"fromdate\", dateTime);\n    var dateTime1 = moment(this.state.startDate1).format(format);\n    localStorage.setItem(\"todate\", dateTime1);\n    if (dateTime <= dateTime1) {\n      if (localStorage.getItem(\"value\") == \"vehicle\") {\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n          }\n        }\n        fetch('//localhost:8765/evcharge/api/SessionsPerEV/' + localStorage.getItem('VehicledataId') + '/' + localStorage.getItem(\"fromdate\") + '/' + localStorage.getItem(\"todate\"), requestOptions)\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            localStorage.setItem(\"NumberOfVisitedPoints\", data.NumberOfVisitedPoints);\n            localStorage.setItem(\"TotalEnergyConsumed\", data.TotalEnergyConsumed);\n            window.location = \"//localhost:3000/ShowDataVehicle\";\n          })\n          .catch(error => {\n            alert(\"No sessions for this vehicle these days\");\n            window.location = \"//localhost:3000/SessionsPerVehicle\";\n            console.error(error);\n          })\n      }\n      if (localStorage.getItem(\"value\") == \"station\") {\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n          }\n        }\n        fetch('//localhost:8765/evcharge/api/SessionsPerStation/' + localStorage.getItem('StationDataId') + '/' + localStorage.getItem(\"fromdate\") + '/' + localStorage.getItem(\"todate\"), requestOptions)\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            localStorage.setItem(\"NumberOfChargingSessions\", data.NumberOfChargingSessions);\n            localStorage.setItem(\"TotalEnergyDelivered\", data.TotalEnergyDelivered);\n            window.location = \"//localhost:3000/ShowDataStation\";\n          })\n          .catch(error => {\n            alert(\"No sessions for this station these days\");\n            window.location = \"//localhost:3000/SessionsPerStation\";\n            console.error(error);\n          })\n      }\n      if (localStorage.getItem(\"value\") == \"point\") {\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n          }\n        }\n        fetch('//localhost:8765/evcharge/api/SessionsPerPoint/' + localStorage.getItem('PointDataId') + '/' + localStorage.getItem(\"fromdate\") + '/' + localStorage.getItem(\"todate\"), requestOptions)\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            localStorage.setItem(\"Operatortitle\", \" \");\n            localStorage.setItem(\"Operatortitle\", data.PointOperator);\n            window.location = \"//localhost:3000/ShowDataPoint\";\n          })\n          .catch(error => {\n            alert(\"No sessions for this point these days\");\n            window.location = \"//localhost:3000/SessionsPerPoint\";\n            console.error(error);\n          })\n      }\n      if (localStorage.getItem(\"value\") == \"provider\") {\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n          }\n        }\n        fetch('//localhost:8765/evcharge/api/SessionsPerProvider/' + localStorage.getItem('ProviderDataId') + '/' + localStorage.getItem(\"fromdate\") + '/' + localStorage.getItem(\"todate\"), requestOptions)\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            window.location = \"//localhost:3000/ShowDataProvider\";\n          })\n          .catch(error => {\n            alert(\"No sessions for this provider these days\");\n            window.location = \"//localhost:3000/SessionsPerProvider\";\n            console.error(error);\n          })\n      }\n    }\n    else {\n      alert(\"It can not be the date From after the date To\");\n      window.location = \"//localhost:3000/ChooseDate\";\n    }\n  }\n\n  render() {\n    return (\n      <html>\n        <body className=\"stations-body\">\n          <meta charSet=\"UTF-8\" />\n          <title>Choose date</title>\n          <div>\n            <h2>Choose date</h2>\n\n            <table ref=\"main\" />\n\n          </div>\n          <div className=\"body1\">\n            <div className=\"col-75\">\n              <div className=\"container\">\n                <form action=\"/action_page.php\">\n                  <h3>From</h3>\n\n                  <div className=\"filters\">\n                    <div id=\"filterbox\">\n                      <DatePicker\n                        selected={this.state.startDate}\n                        onChange={this.handleStartChange} />\n                    </div>\n                  </div>\n                  <h3>To</h3>\n                  <div className=\"filters\">\n                    <div id=\"filterbox\">\n                      <DatePicker\n                        selected={this.state.startDate1}\n                        onChange={this.handleStartChange1} />\n                    </div>\n                  </div>\n                  <button id=\"chooseDate\" className=\"btn\" onClick={this.chooseDate.bind(this)}>Show data</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </body>\n      </html>\n    )\n  }\n}\n\nexport default ChooseDate;","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/Stations.js",["140"],"import React from 'react';\nimport $ from 'jquery';\nimport './MyVehicles.css';\n\nclass Stations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [], ChargingPoints: []\n    };\n  }\n\n  componentDidMount() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-OBSERVATORY-AUTH': localStorage.getItem(\"token\")\n      }\n    }\n    fetch('//localhost:8765/evcharge/api/chargingStations', requestOptions)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const states = { data };\n        $(this.refs.main).DataTable({\n          // dom: '<\"data-table-wrapper\"t>',\n          data: data,\n          columns: [\n            {\n              title: 'Town',\n              width: \"15%\",\n              data: 'address.Town'\n            },\n            {\n              title: 'Address',\n              width: \"15%\",\n              data: 'address.AddressLine1'\n            },\n            {\n              title: 'Country',\n              width: \"15%\",\n              data: 'address.Country.Title'\n            },\n            {\n              title: 'Action',\n              width: \"25%\",\n              data: 'operator.ID',\n              'render': function (id) {\n                return (\n                  '<a className=\"btk\" class=\"makechargeBtn\" id=\"' + id + '\" ><i type=\"button\">charge</i></a>'\n                )\n              }\n            }\n\n          ],\n          ordering: false\n        });\n        $(this.refs.main).on(\"click\", \".makechargeBtn\", function (ev) {\n          localStorage.setItem('OperatorId', ev.currentTarget.id);\n          window.location = \"//localhost:3000/ChooseCar\";\n        })\n      })\n  }\n  render() {\n    return (\n      <html>\n        <body className=\"stations-body\">\n          <meta charSet=\"UTF-8\" />\n          <title>Stations</title>\n          <div>\n            <h2>Stations</h2>\n\n            <table ref=\"main\" />\n\n          </div>\n        </body>\n      </html>\n    )\n  }\n}\n\nexport default Stations;","/home/jim/Documents/Code/SoftEng Project/evcharge/TL20-28/front-end/src/ChooseDateReport.js",[],{"ruleId":"141","severity":1,"message":"142","line":34,"column":7,"nodeType":"143","messageId":"144","endLine":34,"endColumn":11},{"ruleId":"145","severity":1,"message":"146","line":37,"column":3,"nodeType":"147","messageId":"148","endLine":39,"endColumn":4},{"ruleId":"149","severity":1,"message":"150","line":44,"column":11,"nodeType":"151","messageId":"152","endLine":44,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":44,"column":22,"nodeType":"151","messageId":"152","endLine":44,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":93,"column":40,"nodeType":"151","messageId":"152","endLine":93,"endColumn":42},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"141","severity":1,"message":"157","line":26,"column":13,"nodeType":"143","messageId":"144","endLine":26,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":7,"endColumn":4},{"ruleId":"149","severity":1,"message":"150","line":43,"column":43,"nodeType":"151","messageId":"152","endLine":43,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":61,"column":37,"nodeType":"151","messageId":"152","endLine":61,"endColumn":39},{"ruleId":"149","severity":1,"message":"150","line":135,"column":31,"nodeType":"151","messageId":"152","endLine":135,"endColumn":33},{"ruleId":"149","severity":1,"message":"150","line":157,"column":90,"nodeType":"151","messageId":"152","endLine":157,"endColumn":92},{"ruleId":"149","severity":1,"message":"150","line":179,"column":111,"nodeType":"151","messageId":"152","endLine":179,"endColumn":113},{"ruleId":"149","severity":1,"message":"150","line":179,"column":163,"nodeType":"151","messageId":"152","endLine":179,"endColumn":165},{"ruleId":"149","severity":1,"message":"150","line":203,"column":88,"nodeType":"151","messageId":"152","endLine":203,"endColumn":90},{"ruleId":"149","severity":1,"message":"150","line":203,"column":140,"nodeType":"151","messageId":"152","endLine":203,"endColumn":142},{"ruleId":"149","severity":1,"message":"150","line":203,"column":189,"nodeType":"151","messageId":"152","endLine":203,"endColumn":191},{"ruleId":"158","severity":1,"message":"159","line":211,"column":21,"nodeType":"143","messageId":"160","endLine":211,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":212,"column":88,"nodeType":"151","messageId":"152","endLine":212,"endColumn":90},{"ruleId":"149","severity":1,"message":"150","line":212,"column":140,"nodeType":"151","messageId":"152","endLine":212,"endColumn":142},{"ruleId":"149","severity":1,"message":"150","line":212,"column":189,"nodeType":"151","messageId":"152","endLine":212,"endColumn":191},{"ruleId":"149","severity":1,"message":"150","line":236,"column":57,"nodeType":"151","messageId":"152","endLine":236,"endColumn":59},{"ruleId":"149","severity":1,"message":"150","line":237,"column":88,"nodeType":"151","messageId":"152","endLine":237,"endColumn":90},{"ruleId":"149","severity":1,"message":"150","line":237,"column":140,"nodeType":"151","messageId":"152","endLine":237,"endColumn":142},{"ruleId":"149","severity":1,"message":"150","line":237,"column":189,"nodeType":"151","messageId":"152","endLine":237,"endColumn":191},{"ruleId":"149","severity":1,"message":"150","line":243,"column":88,"nodeType":"151","messageId":"152","endLine":243,"endColumn":90},{"ruleId":"149","severity":1,"message":"150","line":243,"column":140,"nodeType":"151","messageId":"152","endLine":243,"endColumn":142},{"ruleId":"149","severity":1,"message":"150","line":243,"column":189,"nodeType":"151","messageId":"152","endLine":243,"endColumn":191},{"ruleId":"149","severity":1,"message":"150","line":243,"column":246,"nodeType":"151","messageId":"152","endLine":243,"endColumn":248},{"ruleId":"149","severity":1,"message":"150","line":21,"column":36,"nodeType":"151","messageId":"152","endLine":21,"endColumn":38},{"ruleId":"149","severity":1,"message":"150","line":75,"column":42,"nodeType":"151","messageId":"152","endLine":75,"endColumn":44},{"ruleId":"141","severity":1,"message":"161","line":84,"column":15,"nodeType":"143","messageId":"144","endLine":84,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":172,"column":30,"nodeType":"151","messageId":"164","endLine":172,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":172,"column":39,"nodeType":"151","messageId":"164","endLine":172,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":172,"column":45,"nodeType":"151","messageId":"164","endLine":172,"endColumn":46},{"ruleId":"162","severity":1,"message":"163","line":172,"column":54,"nodeType":"151","messageId":"164","endLine":172,"endColumn":55},{"ruleId":"162","severity":1,"message":"163","line":175,"column":30,"nodeType":"151","messageId":"164","endLine":175,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":175,"column":39,"nodeType":"151","messageId":"164","endLine":175,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":175,"column":45,"nodeType":"151","messageId":"164","endLine":175,"endColumn":46},{"ruleId":"162","severity":1,"message":"163","line":175,"column":54,"nodeType":"151","messageId":"164","endLine":175,"endColumn":55},{"ruleId":"149","severity":1,"message":"150","line":189,"column":25,"nodeType":"151","messageId":"152","endLine":189,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":190,"column":40,"nodeType":"151","messageId":"152","endLine":190,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":225,"column":30,"nodeType":"151","messageId":"164","endLine":225,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":225,"column":44,"nodeType":"151","messageId":"164","endLine":225,"endColumn":45},{"ruleId":"162","severity":1,"message":"163","line":225,"column":50,"nodeType":"151","messageId":"164","endLine":225,"endColumn":51},{"ruleId":"162","severity":1,"message":"163","line":225,"column":65,"nodeType":"151","messageId":"164","endLine":225,"endColumn":66},{"ruleId":"162","severity":1,"message":"163","line":228,"column":30,"nodeType":"151","messageId":"164","endLine":228,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":228,"column":44,"nodeType":"151","messageId":"164","endLine":228,"endColumn":45},{"ruleId":"162","severity":1,"message":"163","line":228,"column":50,"nodeType":"151","messageId":"164","endLine":228,"endColumn":51},{"ruleId":"162","severity":1,"message":"163","line":228,"column":65,"nodeType":"151","messageId":"164","endLine":228,"endColumn":66},{"ruleId":"141","severity":1,"message":"157","line":28,"column":13,"nodeType":"143","messageId":"144","endLine":28,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":74,"column":25,"nodeType":"151","messageId":"152","endLine":74,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":38,"column":41,"nodeType":"151","messageId":"152","endLine":38,"endColumn":43},{"ruleId":"149","severity":1,"message":"150","line":61,"column":41,"nodeType":"151","messageId":"152","endLine":61,"endColumn":43},{"ruleId":"149","severity":1,"message":"150","line":84,"column":41,"nodeType":"151","messageId":"152","endLine":84,"endColumn":43},{"ruleId":"149","severity":1,"message":"150","line":107,"column":41,"nodeType":"151","messageId":"152","endLine":107,"endColumn":43},{"ruleId":"141","severity":1,"message":"165","line":26,"column":15,"nodeType":"143","messageId":"144","endLine":26,"endColumn":21},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'table' is assigned a value but never used.","no-redeclare","'bar' is already defined.","redeclared","'requestOptions1' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'states' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]